{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack:///./base64Image.js?","webpack:///webpack/bootstrap?","webpack:///webpack/runtime/define property getters?","webpack:///webpack/runtime/hasOwnProperty shorthand?","webpack:///webpack/runtime/make namespace object?","webpack:///./src/taskpane/taskpane.js?"],"sourcesContent":["export const base64Image =\r\n    \"\";","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable no-undef */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Word */\n\nimport { base64Image } from \"../../base64Image\";\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n    // Determine if the user's version of Office supports all the Office.js APIs that are used in the tutorial.\n    if (!Office.context.requirements.isSetSupported(\"WordApi\", \"1.3\")) {\n      console.log(\"Sorry. The tutorial add-in uses Word.js APIs that are not available in your version of Office.\");\n    }\n\n    // Assign event handlers and other initialization logic.\n    document.getElementById(\"insert-paragraph\").onclick = insertParagraph;\n    document.getElementById(\"apply-style\").onclick = insertParagraphNew;\n    //document.getElementById(\"apply-style\").onclick = applyStyle;\n    document.getElementById(\"apply-custom-style\").onclick = applyCustomStyle;\n    document.getElementById(\"change-font\").onclick = changeFont;\n    document.getElementById(\"insert-text-into-range\").onclick = insertTextIntoRange;\n    document.getElementById(\"insert-text-outside-range\").onclick = insertTextBeforeRange;\n    document.getElementById(\"replace-text\").onclick = replaceText;\n    document.getElementById(\"insert-image\").onclick = insertImage;\n    document.getElementById(\"insert-html\").onclick = insertHTML;\n    document.getElementById(\"insert-table\").onclick = insertTable;\n    document.getElementById(\"create-content-control\").onclick = createContentControl;\n    document.getElementById(\"replace-content-in-control\").onclick = replaceContentInControl;\n\n    // document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n\n    //document.getElementById(\"run\").onclick = run;\n  }\n});\n\nasync function replaceContentInControl() {\n  await Word.run(async (context) => {\n    const serviceNameContentControl = context.document.contentControls.getByTag(\"serviceName\").getFirst();\n    serviceNameContentControl.insertText(\"Fabrikam Online Productivity Suite\", \"Replace\");\n\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function createContentControl() {\n  await Word.run(async (context) => {\n    const serviceNameRange = context.document.getSelection();\n    const serviceNameContentControl = serviceNameRange.insertContentControl();\n    serviceNameContentControl.title = \"Service Name\";\n    serviceNameContentControl.tag = \"serviceName\";\n    serviceNameContentControl.appearance = \"Tags\";\n    serviceNameContentControl.color = \"blue\";\n\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function insertTable() {\n  await Word.run(async (context) => {\n    //const secondParagraph = context.document.body.paragraphs.getFirst().getNext();\n\n    const tableData = [\n      [\"Name\", \"ID\", \"Birth City\"],\n      [\"Bob\", \"434\", \"Chicago\"],\n      [\"Sue\", \"719\", \"Havana\"],\n    ];\n    // context.document.body.paragraphs.getFirst().getNext().insertTable(3, 3, \"After\", tableData);\n    context.document.body.insertTable(3, 3, \"Start\", tableData);\n\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function insertHTML() {\n  await Word.run(async (context) => {\n    //const blankParagraph = context.document.body.paragraphs.getLast().insertParagraph(\"\", \"After\");\n    context.document.body.insertHtml(\n      \"<p style='font-family: verdana;'>Inserted HTML.</p><p>Another paragraph</p>\",\n      \"Start\"\n    );\n\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function insertImage() {\n  await Word.run(async (context) => {\n    context.document.body.insertInlinePictureFromBase64(base64Image, \"End\");\n\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function replaceText() {\n  await Word.run(async (context) => {\n    const doc = context.document;\n    const originalRange = doc.getSelection();\n    originalRange.insertText(\"many\", \"Replace\");\n\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function insertTextBeforeRange() {\n  await Word.run(async (context) => {\n    const doc = context.document;\n    const originalRange = doc.getSelection();\n    originalRange.insertText(\"Office 2019, \", \"Before\");\n\n    originalRange.load(\"text\");\n    await context.sync();\n\n    doc.body.insertParagraph(\"Current text of original range: \" + originalRange.text, \"End\");\n\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\n// export async function run() {\n//   return Word.run(async (context) => {\n//     /**\n//      * Insert your Word code here\n//      */\n\n//     // insert a paragraph at the end of the document.\n//     const paragraph = context.document.body.insertParagraph(\"Hello World\", Word.InsertLocation.end);\n\n//     // change the paragraph color to blue.\n//     paragraph.font.color = \"blue\";\n\n//     await context.sync();\n//   });\n// }\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nasync function applyStyle() {\n  await Word.run(async (context) => {\n    const firstParagraph = context.document.body.paragraphs.getFirst();\n    firstParagraph.styleBuiltIn = Word.Style.intenseReference;\n\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function applyCustomStyle() {\n  await Word.run(async (context) => {\n    // const lastParagraph = context.document.body.paragraphs.getLast();\n    // lastParagraph.style = \"MyCustomStyle\";\n    // await context.sync();\n    context.document.body.insertParagraph(\"MyCustomStyle\",\"Start\");\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function changeFont() {\n  await Word.run(async (context) => {\n    const secondParagraph = context.document.body.paragraphs.getFirst().getNext();\n    secondParagraph.font.set({\n      name: \"Courier New\",\n      bold: true,\n      size: 18,\n    });\n\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function insertTextIntoRange() {\n  await Word.run(async (context) => {\n    const doc = context.document;\n    const originalRange = doc.getSelection();\n    originalRange.insertText(\" (C2R)\", \"End\");\n\n    originalRange.load(\"text\");\n    await context.sync();\n\n    doc.body.insertParagraph(\"Original range: \" + originalRange.text, \"End\");\n\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function insertParagraph() {\n  await Word.run(async (context) => {\n    const docBody = context.document.body;\n    docBody.insertParagraph(\n      \"Office has several versions, including Office 2016, Microsoft 365 subscription, and Office on the web.\",\n      \"Start\"\n    );\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n\nasync function insertParagraphNew() {\n  await Word.run(async (context) => {\n    const docBody = context.document.body;\n    docBody.insertParagraph(\n      \"Office has several versions, including Office 2016, Microsoft 365 subscription, and Office on the web. New Text\",\n      \"Start\"\n    );\n    await context.sync();\n\n    docBody.insertParagraph(context.document.body.paragraphs.toJSON(), \"End\");\n    await context.sync();\n  }).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n      console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n  });\n}\n"],"names":["base64Image","Office","onReady","info","host","HostType","Word","context","requirements","isSetSupported","console","log","document","getElementById","onclick","insertParagraph","insertParagraphNew","applyCustomStyle","changeFont","insertTextIntoRange","insertTextBeforeRange","replaceText","insertImage","insertHTML","insertTable","createContentControl","replaceContentInControl","style","display","run","serviceNameContentControl","contentControls","getByTag","getFirst","insertText","sync","catch","error","OfficeExtension","Error","JSON","stringify","debugInfo","serviceNameRange","getSelection","insertContentControl","title","tag","appearance","color","tableData","body","insertHtml","insertInlinePictureFromBase64","doc","originalRange","load","text","applyStyle","firstParagraph","paragraphs","styleBuiltIn","Style","intenseReference","secondParagraph","getNext","font","set","name","bold","size","docBody","toJSON"],"sourceRoot":""}